// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PattonFanSite.Repositories;

namespace PattonFanSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181130225036_TitleLength")]
    partial class TitleLength
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PattonFanSite.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText");

                    b.Property<int?>("ContributorUserId");

                    b.Property<int?>("StoryId");

                    b.HasKey("CommentId");

                    b.HasIndex("ContributorUserId");

                    b.HasIndex("StoryId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PattonFanSite.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContributorUserId");

                    b.Property<int?>("StoryId");

                    b.Property<int>("UserRating");

                    b.HasKey("RatingId");

                    b.HasIndex("ContributorUserId");

                    b.HasIndex("StoryId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("PattonFanSite.Models.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("StoryText")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("UserId");

                    b.HasKey("StoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("PattonFanSite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PattonFanSite.Models.Comment", b =>
                {
                    b.HasOne("PattonFanSite.Models.User", "Contributor")
                        .WithMany("Comments")
                        .HasForeignKey("ContributorUserId");

                    b.HasOne("PattonFanSite.Models.Story")
                        .WithMany("Comments")
                        .HasForeignKey("StoryId");
                });

            modelBuilder.Entity("PattonFanSite.Models.Rating", b =>
                {
                    b.HasOne("PattonFanSite.Models.User", "Contributor")
                        .WithMany("Ratings")
                        .HasForeignKey("ContributorUserId");

                    b.HasOne("PattonFanSite.Models.Story")
                        .WithMany("Ratings")
                        .HasForeignKey("StoryId");
                });

            modelBuilder.Entity("PattonFanSite.Models.Story", b =>
                {
                    b.HasOne("PattonFanSite.Models.User")
                        .WithMany("Stories")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
